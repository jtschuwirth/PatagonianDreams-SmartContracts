{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x8505411A5a60859b4081120665Be0DEBbe0a4655",
    "txHash": "0x1c944148ed653ee7a78c8bbe9dbd80b172ec11b04fa8647c29de6a603d1e3b5f"
  },
  "proxies": [
    {
      "address": "0xB7416023bE7791ABfBE188BB9E8a6eaBA97c5e7B",
      "txHash": "0xe85c061224ec2ebf4bb3730122512906d279a7574568162d708c9f0a9168d78a",
      "kind": "transparent"
    }
  ],
  "impls": {
    "755f7e90257105690bcd33ddb425e3b6eb5fd710e22fff699850b2b24b5ab05a": {
      "address": "0xD08E29Ec452080857d0bD5aC29337e3c20E08d17",
      "txHash": "0x4fef2edee58cdb92b502a4f758b1c9f98688b7c3c369330573a66af58e01fc06",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\project:\\node_modules\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\project:\\node_modules\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\node_modules\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\node_modules\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\node_modules\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\node_modules\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\node_modules\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\node_modules\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\node_modules\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\project:\\node_modules\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\project:\\node_modules\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "Tree",
            "label": "Nonce",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Tree.sol:13"
          },
          {
            "contract": "Tree",
            "label": "Digits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Tree.sol:14"
          },
          {
            "contract": "Tree",
            "label": "Modulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Tree.sol:15"
          },
          {
            "contract": "Tree",
            "label": "ContractOwner",
            "type": "t_address",
            "src": "..\\project:\\contracts\\Tree.sol:16"
          },
          {
            "contract": "Tree",
            "label": "Token",
            "type": "t_address",
            "src": "..\\project:\\contracts\\Tree.sol:19"
          },
          {
            "contract": "Tree",
            "label": "QuestContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\Tree.sol:22"
          },
          {
            "contract": "Tree",
            "label": "trees",
            "type": "t_array(t_struct(TreeStruct)564_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Tree.sol:31"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(TreeStruct)564_storage)dyn_storage": {
            "label": "struct Tree.TreeStruct[]"
          },
          "t_struct(TreeStruct)564_storage": {
            "label": "struct Tree.TreeStruct",
            "members": [
              {
                "label": "treeDNA",
                "type": "t_uint256"
              },
              {
                "label": "level",
                "type": "t_uint256"
              },
              {
                "label": "exp",
                "type": "t_uint256"
              },
              {
                "label": "onQuestUntil",
                "type": "t_uint256"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
