{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x0148356544E9403acF1dE103adCfcB5804839667",
    "txHash": "0xf73b2a6916c432d39a671ac0ddbd47ae631cb53fd1486c7df6a46900daaa7e98"
  },
  "proxies": [
    {
      "address": "0xfAF81817C5bf6995f51fFAC64f9fCaeEb56ad340",
      "txHash": "0x5cb52f6d0291d7ac05c1b93da22979f29e15bcdcb41039a37d5f5a99637d0a6b",
      "kind": "transparent"
    },
    {
      "address": "0xA62C6593a4f22A65F1571B5c3a4F53E7cda89dd5",
      "txHash": "0x287dd75357ce56632e31862c1747fdb73fb7b92053d8dd8bfc5030ec606ec005",
      "kind": "transparent"
    },
    {
      "address": "0x93F821a621616c61BB330608dF6888B72f1d56AA",
      "txHash": "0x0734936ebc834bdee6e1042fae5f5cc06d5a4f22ea1e714d17269d0b93fbc4e4",
      "kind": "transparent"
    }
  ],
  "impls": {
    "9f5e2b482315580007565229e121f6127a09f4e3de6cff022f06e96856eed528": {
      "address": "0x536CF2Cc6aB6Ce8c951D677F0AFdAb7C0514804F",
      "txHash": "0xa4b4096e861d822e4e9e12b3b611a24b80e445f3417dd99e6e3e792a3a4fac50",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\project:\\node_modules\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\project:\\node_modules\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\node_modules\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\node_modules\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "..\\project:\\node_modules\\@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\project:\\node_modules\\@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "..\\project:\\node_modules\\@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "..\\project:\\node_modules\\@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:471"
          },
          {
            "contract": "GameItems",
            "label": "ContractOwner",
            "type": "t_address",
            "src": "..\\project:\\contracts\\GameItems.sol:9"
          },
          {
            "contract": "GameItems",
            "label": "QuestContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\GameItems.sol:10"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3a108a4cb1895f4b78f09d1091fa9fb148f287e64234be53eb73fdb6c7ccbfbb": {
      "address": "0x34c0469e8deE2d0F04EF22D7cC3a4c7423b7342e",
      "txHash": "0xb0360bb38a39356ec69074b587ac59a967075c2aa8e107995de21ac45d2382bb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\project:\\node_modules\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\project:\\node_modules\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\node_modules\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\node_modules\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\node_modules\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\node_modules\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\node_modules\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\node_modules\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\node_modules\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\project:\\node_modules\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\project:\\node_modules\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "Tree",
            "label": "Digits",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Tree.sol:15"
          },
          {
            "contract": "Tree",
            "label": "Modulus",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Tree.sol:16"
          },
          {
            "contract": "Tree",
            "label": "ContractOwner",
            "type": "t_address",
            "src": "..\\project:\\contracts\\Tree.sol:18"
          },
          {
            "contract": "Tree",
            "label": "TreasuryAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\Tree.sol:19"
          },
          {
            "contract": "Tree",
            "label": "TokenAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\Tree.sol:20"
          },
          {
            "contract": "Tree",
            "label": "GameItemsAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\Tree.sol:21"
          },
          {
            "contract": "Tree",
            "label": "QuestAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\Tree.sol:22"
          },
          {
            "contract": "Tree",
            "label": "trees",
            "type": "t_array(t_struct(TreeStruct)354_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Tree.sol:33"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(TreeStruct)354_storage)dyn_storage": {
            "label": "struct Tree.TreeStruct[]"
          },
          "t_struct(TreeStruct)354_storage": {
            "label": "struct Tree.TreeStruct",
            "members": [
              {
                "label": "treeDNA",
                "type": "t_uint256"
              },
              {
                "label": "level",
                "type": "t_uint256"
              },
              {
                "label": "exp",
                "type": "t_uint256"
              },
              {
                "label": "barracks",
                "type": "t_uint256"
              },
              {
                "label": "trainingGrounds",
                "type": "t_uint256"
              },
              {
                "label": "onQuestUntil",
                "type": "t_uint256"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3a558da2f4dbdea50e76f7e77ad3f90fe84cbe82aeff1fe0bf919c288195617b": {
      "address": "0x3f3FC753238dF16b139c37DcDbA4FA3f0eae269D",
      "txHash": "0x4af3f1917cbb1f5f0d0aa98a898cefa54374c930dc773e1c6fb60e846a06b8d2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\project:\\node_modules\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\project:\\node_modules\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "TreeQuests",
            "label": "ContractOwner",
            "type": "t_address",
            "src": "..\\project:\\contracts\\TreeQuests.sol:15"
          },
          {
            "contract": "TreeQuests",
            "label": "TreasuryAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\TreeQuests.sol:16"
          },
          {
            "contract": "TreeQuests",
            "label": "TreeAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\TreeQuests.sol:17"
          },
          {
            "contract": "TreeQuests",
            "label": "TokenAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\TreeQuests.sol:18"
          },
          {
            "contract": "TreeQuests",
            "label": "GameItemsAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\TreeQuests.sol:19"
          },
          {
            "contract": "TreeQuests",
            "label": "totalTreasuryBalance",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\TreeQuests.sol:21"
          },
          {
            "contract": "TreeQuests",
            "label": "tree",
            "type": "t_contract(AbstractTree)109",
            "src": "..\\project:\\contracts\\TreeQuests.sol:23"
          },
          {
            "contract": "TreeQuests",
            "label": "gameItems",
            "type": "t_contract(AbstractGameItems)24",
            "src": "..\\project:\\contracts\\TreeQuests.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(AbstractTree)109": {
            "label": "contract AbstractTree"
          },
          "t_contract(AbstractGameItems)24": {
            "label": "contract AbstractGameItems"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
