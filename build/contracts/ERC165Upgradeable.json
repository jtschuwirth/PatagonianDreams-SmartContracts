{
  "contractName": "ERC165Upgradeable",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x68861bcc80cacbd498efde75aab6c74a486cc48262660d326c8d7530d9752097\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5beb2713aca05976562500789329e8c41320d00bd68ea9247856ec73894c3e3f\",\"dweb:/ipfs/QmQKwkpofsZYAzMZs7uNL7Qq58zVBuhoZCGpD6bJdUwyqy\"]},\"project:/node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x3f0f878c796dfc7feba6d3c4e3e526c14c7deae8b7bfc71088e3f38fab0d77b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://69bf7d357ce97852f4fb71045919b1bb2c0ad0c820e3f06b9dd4451b2dc5a343\",\"dweb:/ipfs/QmWt96ZviufDu2qqS7Ln6UCJjfLyoFKbo6YKn54ao3o94z\"]},\"project:/node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xcd98895383d51dc86669a76ae3ad4419fc5dc079d01faea23498e80c1cf9f78a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16a9a1816c3dd4130b7836c42482d455075a9a49c7895bfb788ca3d345c82b32\",\"dweb:/ipfs/QmRxf3UetfDEF8NPuMQ1U8f9cddQpdarhCBhaCXEbe7Kw6\"]},\"project:/node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165Upgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\n    function __ERC165_init() internal onlyInitializing {\n        __ERC165_init_unchained();\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\n    }\n    uint256[50] private __gap;\n}\n",
  "sourcePath": "C:\\Users\\jtsch\\OneDrive\\Escritorio\\Python\\SmartContracts-NFT-Agus\\node_modules\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol",
  "ast": {
    "absolutePath": "project:/node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        4804
      ],
      "ERC165Upgradeable": [
        5097
      ],
      "IERC165Upgradeable": [
        5109
      ],
      "Initializable": [
        2236
      ]
    },
    "id": 5098,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5053,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "99:23:22"
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
        "file": "./IERC165Upgradeable.sol",
        "id": 5054,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5098,
        "sourceUnit": 5110,
        "src": "124:34:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "file": "../../proxy/utils/Initializable.sol",
        "id": 5055,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5098,
        "sourceUnit": 2237,
        "src": "159:45:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 5057,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2236,
              "src": "822:13:22"
            },
            "id": 5058,
            "nodeType": "InheritanceSpecifier",
            "src": "822:13:22"
          },
          {
            "baseName": {
              "id": 5059,
              "name": "IERC165Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5109,
              "src": "837:18:22"
            },
            "id": 5060,
            "nodeType": "InheritanceSpecifier",
            "src": "837:18:22"
          }
        ],
        "canonicalName": "ERC165Upgradeable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5056,
          "nodeType": "StructuredDocumentation",
          "src": "206:576:22",
          "text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
        },
        "fullyImplemented": true,
        "id": 5097,
        "linearizedBaseContracts": [
          5097,
          5109,
          2236
        ],
        "name": "ERC165Upgradeable",
        "nameLocation": "801:17:22",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 5068,
              "nodeType": "Block",
              "src": "913:42:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5065,
                      "name": "__ERC165_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5075,
                      "src": "923:23:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 5066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "923:25:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5067,
                  "nodeType": "ExpressionStatement",
                  "src": "923:25:22"
                }
              ]
            },
            "id": 5069,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5063,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5062,
                  "name": "onlyInitializing",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2220,
                  "src": "896:16:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "896:16:22"
              }
            ],
            "name": "__ERC165_init",
            "nameLocation": "871:13:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5061,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "884:2:22"
            },
            "returnParameters": {
              "id": 5064,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "913:0:22"
            },
            "scope": 5097,
            "src": "862:93:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5074,
              "nodeType": "Block",
              "src": "1022:7:22",
              "statements": []
            },
            "id": 5075,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5072,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5071,
                  "name": "onlyInitializing",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2220,
                  "src": "1005:16:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "1005:16:22"
              }
            ],
            "name": "__ERC165_init_unchained",
            "nameLocation": "970:23:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5070,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "993:2:22"
            },
            "returnParameters": {
              "id": 5073,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1022:0:22"
            },
            "scope": 5097,
            "src": "961:68:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              5108
            ],
            "body": {
              "id": 5091,
              "nodeType": "Block",
              "src": "1186:75:22",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    },
                    "id": 5089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5084,
                      "name": "interfaceId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5078,
                      "src": "1203:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 5086,
                            "name": "IERC165Upgradeable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5109,
                            "src": "1223:18:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC165Upgradeable_$5109_$",
                              "typeString": "type(contract IERC165Upgradeable)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_contract$_IERC165Upgradeable_$5109_$",
                              "typeString": "type(contract IERC165Upgradeable)"
                            }
                          ],
                          "id": 5085,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967269,
                          "src": "1218:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 5087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1218:24:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_contract$_IERC165Upgradeable_$5109",
                          "typeString": "type(contract IERC165Upgradeable)"
                        }
                      },
                      "id": 5088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "interfaceId",
                      "nodeType": "MemberAccess",
                      "src": "1218:36:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "1203:51:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5083,
                  "id": 5090,
                  "nodeType": "Return",
                  "src": "1196:58:22"
                }
              ]
            },
            "documentation": {
              "id": 5076,
              "nodeType": "StructuredDocumentation",
              "src": "1034:56:22",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 5092,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1104:17:22",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5080,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1162:8:22"
            },
            "parameters": {
              "id": 5079,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5078,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1129:11:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 5092,
                  "src": "1122:18:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 5077,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1122:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1121:20:22"
            },
            "returnParameters": {
              "id": 5083,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5082,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5092,
                  "src": "1180:4:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5081,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1180:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1179:6:22"
            },
            "scope": 5097,
            "src": "1095:166:22",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 5096,
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "1286:5:22",
            "nodeType": "VariableDeclaration",
            "scope": 5097,
            "src": "1266:25:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 5093,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1266:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 5095,
              "length": {
                "hexValue": "3530",
                "id": 5094,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1274:2:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "1266:11:22",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "visibility": "private"
          }
        ],
        "scope": 5098,
        "src": "783:511:22",
        "usedErrors": []
      }
    ],
    "src": "99:1196:22"
  },
  "legacyAST": {
    "absolutePath": "project:/node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        4804
      ],
      "ERC165Upgradeable": [
        5097
      ],
      "IERC165Upgradeable": [
        5109
      ],
      "Initializable": [
        2236
      ]
    },
    "id": 5098,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5053,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "99:23:22"
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
        "file": "./IERC165Upgradeable.sol",
        "id": 5054,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5098,
        "sourceUnit": 5110,
        "src": "124:34:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "file": "../../proxy/utils/Initializable.sol",
        "id": 5055,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5098,
        "sourceUnit": 2237,
        "src": "159:45:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 5057,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2236,
              "src": "822:13:22"
            },
            "id": 5058,
            "nodeType": "InheritanceSpecifier",
            "src": "822:13:22"
          },
          {
            "baseName": {
              "id": 5059,
              "name": "IERC165Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5109,
              "src": "837:18:22"
            },
            "id": 5060,
            "nodeType": "InheritanceSpecifier",
            "src": "837:18:22"
          }
        ],
        "canonicalName": "ERC165Upgradeable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5056,
          "nodeType": "StructuredDocumentation",
          "src": "206:576:22",
          "text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
        },
        "fullyImplemented": true,
        "id": 5097,
        "linearizedBaseContracts": [
          5097,
          5109,
          2236
        ],
        "name": "ERC165Upgradeable",
        "nameLocation": "801:17:22",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 5068,
              "nodeType": "Block",
              "src": "913:42:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5065,
                      "name": "__ERC165_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5075,
                      "src": "923:23:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 5066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "923:25:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5067,
                  "nodeType": "ExpressionStatement",
                  "src": "923:25:22"
                }
              ]
            },
            "id": 5069,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5063,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5062,
                  "name": "onlyInitializing",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2220,
                  "src": "896:16:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "896:16:22"
              }
            ],
            "name": "__ERC165_init",
            "nameLocation": "871:13:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5061,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "884:2:22"
            },
            "returnParameters": {
              "id": 5064,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "913:0:22"
            },
            "scope": 5097,
            "src": "862:93:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5074,
              "nodeType": "Block",
              "src": "1022:7:22",
              "statements": []
            },
            "id": 5075,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5072,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5071,
                  "name": "onlyInitializing",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2220,
                  "src": "1005:16:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "1005:16:22"
              }
            ],
            "name": "__ERC165_init_unchained",
            "nameLocation": "970:23:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5070,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "993:2:22"
            },
            "returnParameters": {
              "id": 5073,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1022:0:22"
            },
            "scope": 5097,
            "src": "961:68:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              5108
            ],
            "body": {
              "id": 5091,
              "nodeType": "Block",
              "src": "1186:75:22",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    },
                    "id": 5089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5084,
                      "name": "interfaceId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5078,
                      "src": "1203:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 5086,
                            "name": "IERC165Upgradeable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5109,
                            "src": "1223:18:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC165Upgradeable_$5109_$",
                              "typeString": "type(contract IERC165Upgradeable)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_contract$_IERC165Upgradeable_$5109_$",
                              "typeString": "type(contract IERC165Upgradeable)"
                            }
                          ],
                          "id": 5085,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967269,
                          "src": "1218:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 5087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1218:24:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_contract$_IERC165Upgradeable_$5109",
                          "typeString": "type(contract IERC165Upgradeable)"
                        }
                      },
                      "id": 5088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "interfaceId",
                      "nodeType": "MemberAccess",
                      "src": "1218:36:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "1203:51:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5083,
                  "id": 5090,
                  "nodeType": "Return",
                  "src": "1196:58:22"
                }
              ]
            },
            "documentation": {
              "id": 5076,
              "nodeType": "StructuredDocumentation",
              "src": "1034:56:22",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 5092,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1104:17:22",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5080,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1162:8:22"
            },
            "parameters": {
              "id": 5079,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5078,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1129:11:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 5092,
                  "src": "1122:18:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 5077,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1122:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1121:20:22"
            },
            "returnParameters": {
              "id": 5083,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5082,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5092,
                  "src": "1180:4:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5081,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1180:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1179:6:22"
            },
            "scope": 5097,
            "src": "1095:166:22",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 5096,
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "1286:5:22",
            "nodeType": "VariableDeclaration",
            "scope": 5097,
            "src": "1266:25:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 5093,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1266:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 5095,
              "length": {
                "hexValue": "3530",
                "id": 5094,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1274:2:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "1266:11:22",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "visibility": "private"
          }
        ],
        "scope": 5098,
        "src": "783:511:22",
        "usedErrors": []
      }
    ],
    "src": "99:1196:22"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-02-05T11:25:57.018Z",
  "devdoc": {
    "details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
    "kind": "dev",
    "methods": {
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}